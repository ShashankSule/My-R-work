mu_posterior <- rnorm(S, mean = (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi), sd = sqrt(1/(phi_0 + n*phi)))
ggplot(as.data.frame(mu_posterior), aes(x=mu_posterior))+
geom_histogram()
means <- numeric(length=2)
sds <- numeric(length=2)
phi_0 <- 1
means[1] <- (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi)
sds[1] <- sqrt(1/phi_0 + n*phi)
phi_0 <- sqrt(10)
means[2] <- (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi)
sds[2] <- sqrt(1/phi_0 + n*phi)
comps <- matrix(data = c(means, sds), nrow = 2, ncol=2, byrow = TRUE, dimnames=list(c("Mean", "Standard deviation"), c("John", "Mary")))
comps
S <- 10000
mu_0 <- 8
phi_0 <- 1
phi <- sqrt(1/1.5)
n <- 14
mu_posterior <- rnorm(S, mean = (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi),
sd = sqrt(1/(phi_0 + n*phi)))
ggplot(as.data.frame(mu_posterior), aes(x=mu_posterior))+
geom_histogram(binwidth = 0.5)
S <- 10000
mu_0 <- 8
phi_0 <- 1
phi <- sqrt(1/1.5)
n <- 14
mu_posterior <- rnorm(S, mean = (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi),
sd = sqrt(1/(phi_0 + n*phi)))
ggplot(as.data.frame(mu_posterior), aes(x=mu_posterior))+
geom_histogram(binwidth = 0.05)
S <- 10000
mu_0 <- 8
phi_0 <- 1
phi <- sqrt(1/1.5)
n <- 14
mu_posterior <- rnorm(S, mean = (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi),
sd = sqrt(1/(phi_0 + n*phi)))
ggplot(as.data.frame(mu_posterior), aes(x=mu_posterior))+
geom_histogram(binwidth = 0.01)
S <- 10000
mu_0 <- 8
phi_0 <- 1
phi <- sqrt(1/1.5)
n <- 14
mu_posterior <- rnorm(S, mean = (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi),
sd = sqrt(1/(phi_0 + n*phi)))
ggplot(as.data.frame(mu_posterior), aes(x=mu_posterior))+
geom_histogram(binwidth = 0.05)
p_2015 <- rbeta(S,438,1495)
p_2005 <- rbeta(S, 265,1497)
o_2015 <- p_2015/(1 - p_2015)
o_2005 <- p_2005/(1 - p_2005)
delta_o <- o_2015 - o_2005
ggplot(as.data.frame(delta_o), aes(x=delta_o))+
geom_histogram(fill = "blue") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
p_2015 <- rbeta(S,438,1495)
p_2005 <- rbeta(S, 265,1497)
o_2015 <- p_2015/(1 - p_2015)
o_2005 <- p_2005/(1 - p_2005)
delta_o <- o_2015 - o_2005
ggplot(as.data.frame(delta_o), aes(x=delta_o))+
geom_histogram(fill = "lightblue") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
p_2015 <- rbeta(S,438,1495)
p_2005 <- rbeta(S, 265,1497)
o_2015 <- p_2015/(1 - p_2015)
o_2005 <- p_2005/(1 - p_2005)
delta_o <- o_2015 - o_2005
ggplot(as.data.frame(delta_o), aes(x=delta_o))+
geom_histogram(fill = "lightblue")
p_2015 <- rbeta(S,438,1495)
p_2005 <- rbeta(S, 265,1497)
o_2015 <- p_2015/(1 - p_2015)
o_2005 <- p_2005/(1 - p_2005)
delta_o <- o_2015 - o_2005
ggplot(as.data.frame(delta_o), aes(x=delta_o))+
geom_histogram()
p_2015 <- rbeta(S,438,1495)
p_2005 <- rbeta(S, 265,1497)
o_2015 <- p_2015/(1 - p_2015)
o_2005 <- p_2005/(1 - p_2005)
delta_o <- o_2015 - o_2005
ggplot(as.data.frame(delta_o), aes(x=delta_o))+
geom_histogram(fill="blue", binwidth = 0.05) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())
xlab("Odds")
p_2015 <- rbeta(S,438,1495)
p_2005 <- rbeta(S, 265,1497)
o_2015 <- p_2015/(1 - p_2015)
o_2005 <- p_2005/(1 - p_2005)
delta_o <- o_2015 - o_2005
ggplot(as.data.frame(delta_o), aes(x=delta_o))+
geom_histogram(fill="blue", binwidth = 0.005) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())
xlab("Odds")
p_2015 <- rbeta(S,438,1495)
p_2005 <- rbeta(S, 265,1497)
o_2015 <- p_2015/(1 - p_2015)
o_2005 <- p_2005/(1 - p_2005)
delta_o <- o_2015 - o_2005
ggplot(as.data.frame(delta_o), aes(x=delta_o))+
geom_histogram(fill="blue", binwidth = 0.005) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
xlab("âˆ‚")
p_2015 <- rbeta(S,438,1495)
p_2005 <- rbeta(S, 265,1497)
o_2015 <- p_2015/(1 - p_2015)
o_2005 <- p_2005/(1 - p_2005)
delta_o <- o_2015 - o_2005
ggplot(as.data.frame(delta_o), aes(x=delta_o))+
geom_histogram(fill="blue", binwidth = 0.005) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
xlab("Delta")
p_2015 <- rbeta(S,438,1495)
p_2005 <- rbeta(S, 265,1497)
o_2015 <- p_2015/(1 - p_2015)
o_2005 <- p_2005/(1 - p_2005)
delta_o <- o_2015 - o_2005
ggplot(as.data.frame(delta_o), aes(x=delta_o))+
geom_histogram(fill="blue", binwidth = 0.005) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
annotate("point", x=0, y=0, color="black", size=10)+
xlab("Delta")
p_2015 <- rbeta(S,438,1495)
p_2005 <- rbeta(S, 265,1497)
o_2015 <- p_2015/(1 - p_2015)
o_2005 <- p_2005/(1 - p_2005)
delta_o <- o_2015 - o_2005
ggplot(as.data.frame(delta_o), aes(x=delta_o))+
geom_histogram(fill="blue", binwidth = 0.005) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
annotate("point", x=0, y=0, color="black", size=5)+
xlab("Delta")
S <- 10000
delta <- -(rbeta(S, 265,1497) - rbeta(S,438,1495))
ggplot(as.data.frame(delta), aes(x=delta))+
geom_histogram(fill="blue", binwidth = 0.005) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
annotate("point", x=0, y=0, color="black", size=5)+
xlab("Delta")
expression(mu)
S <- 10000
mu_0 <- 8
phi_0 <- 1
phi <- sqrt(1/1.5)
n <- 14
mu_posterior <- rnorm(S, mean = (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi),
sd = sqrt(1/(phi_0 + n*phi)))
ggplot(as.data.frame(mu_posterior), aes(x=mu_posterior))+
geom_histogram(fill="blue", binwidth = 0.005) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
xlab(c("Posterior ", expression(mu)))
S <- 10000
mu_0 <- 8
phi_0 <- 1
phi <- sqrt(1/1.5)
n <- 14
mu_posterior <- rnorm(S, mean = (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi),
sd = sqrt(1/(phi_0 + n*phi)))
ggplot(as.data.frame(mu_posterior), aes(x=mu_posterior))+
geom_histogram(fill="blue", binwidth = 0.05) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
xlab(c("Posterior ", expression(mu)))
S <- 10000
mu_0 <- 8
phi_0 <- 1
phi <- sqrt(1/1.5)
n <- 14
mu_posterior <- rnorm(S, mean = (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi),
sd = sqrt(1/(phi_0 + n*phi)))
ggplot(as.data.frame(mu_posterior), aes(x=mu_posterior))+
geom_histogram(fill="blue", binwidth = 0.05) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
xlab(expression(mu))
samples <- numeric(length = S)
for(i in 1:S){
mu <- rnorm(1, mean = (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi),
sd = sqrt(1/(phi_0 + n*phi)))
samples[i] <- mean(rnorm(n,mean=mu, sd=1.5))
}
ggplot(as.data.frame(samples), aes(x=samples))+
geom_histogram(fill="blue", binwidth = 0.05) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
xlab("Sample mean")
samples <- numeric(length = S)
for(i in 1:S){
mu <- rnorm(1, mean = (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi),
sd = sqrt(1/(phi_0 + n*phi)))
samples[i] <- mean(rnorm(n,mean=mu, sd=1.5))
}
ggplot(as.data.frame(samples), aes(x=samples))+
geom_histogram(fill="blue") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
xlab("Sample mean")
phi_0 <- sqrt(10)
mu_posterior <- rnorm(S, mean = (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi),
sd = sqrt(1/(phi_0 + n*phi)))
ggplot(as.data.frame(mu_posterior), aes(x=mu_posterior))+
geom_histogram(fill="blue", binwidth = 0.05) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
xlab(expression(mu))
quantile(mu_posterior, c(0.05,0.95))
quantile(mu_posterior, c(0.05,0.95))
quantile(mu_posterior, c(0.05,0.95))
phi_0 <- sqrt(10)
mu_posterior <- rnorm(S, mean = (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi),
sd = sqrt(1/(phi_0 + n*phi)))
ggplot(as.data.frame(mu_posterior), aes(x=mu_posterior))+
geom_histogram(fill="blue", binwidth = 0.05) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
xlab(expression(mu))
sqrt(3)
3.5*1.7
n*phi
sqrt(1/(sqrt(10) + 14*sqrt(1/1.5)))
knitr::opts_chunk$set(echo = TRUE)
require(ggplot2)
require(dplyr)
require(tidyr)
264 + 1496
437 + 1495
S <- 10000
delta <- -(rbeta(S, 265,1497) - rbeta(S,438,1495))
ggplot(as.data.frame(delta), aes(x=delta))+
geom_histogram(fill="blue", binwidth = 0.005) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
annotate("point", x=0, y=0, color="black", size=5)+
xlab("Delta")
mean(delta <= 0)
p_2015 <- rbeta(S,438,1495)
p_2005 <- rbeta(S, 265,1497)
o_2015 <- p_2015/(1 - p_2015)
o_2005 <- p_2005/(1 - p_2005)
delta_o <- o_2015 - o_2005
ggplot(as.data.frame(delta_o), aes(x=delta_o))+
geom_histogram(fill="blue", binwidth = 0.005) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
annotate("point", x=0, y=0, color="black", size=5)+
xlab("Difference of odds")
mean(delta_o >= 0)
Y <- c(9.0,7.5,7.0,8.0,5,6.5,8.5,7.0,9.0,7.0,5.5,6.0,8.5,7.5)
ybar <- mean(Y)
ybar
S <- 10000
mu_0 <- 8
phi_0 <- 1
phi <- sqrt(1/1.5)
n <- 14
mu_posterior <- rnorm(S, mean = (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi),
sd = sqrt(1/(phi_0 + n*phi)))
ggplot(as.data.frame(mu_posterior), aes(x=mu_posterior))+
geom_histogram(fill="blue", binwidth = 0.05) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
xlab(expression(mu))
quantile(mu_posterior, c(0.05, 0.95))
S <- 10000
mu_0 <- 8
phi_0 <- 1
phi <- sqrt(1/1.5)
n <- 14
mu_posterior <- rnorm(S, mean = (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi),
sd = sqrt(1/(phi_0 + n*phi)))
ggplot(as.data.frame(mu_posterior), aes(x=mu_posterior))+
geom_histogram(fill="blue", binwidth = 0.05) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
xlab(expression(mu))
quantile(mu_posterior, c(0.05, 0.95))
S <- 10000
mu_0 <- 8
phi_0 <- 1
phi <- sqrt(1/1.5)
n <- 14
mu_posterior <- rnorm(S, mean = (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi),
sd = sqrt(1/(phi_0 + n*phi)))
ggplot(as.data.frame(mu_posterior), aes(x=mu_posterior))+
geom_histogram(fill="blue", binwidth = 0.05) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
xlab(expression(mu))
quantile(mu_posterior, c(0.05, 0.95))
samples <- numeric(length = S)
for(i in 1:S){
mu <- rnorm(1, mean = (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi),
sd = sqrt(1/(phi_0 + n*phi)))
samples[i] <- mean(rnorm(n,mean=mu, sd=1.5))
}
ggplot(as.data.frame(samples), aes(x=samples))+
geom_histogram(fill="blue") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
xlab("Sample mean")
quantile(samples, c(0.05,0.95))
phi_0 <- sqrt(10)
mu_posterior <- rnorm(S, mean = (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi),
sd = sqrt(1/(phi_0 + n*phi)))
ggplot(as.data.frame(mu_posterior), aes(x=mu_posterior))+
geom_histogram(fill="blue", binwidth = 0.05) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
xlab(expression(mu))
quantile(mu_posterior, c(0.05,0.95))
means <- numeric(length=2)
sds <- numeric(length=2)
phi_0 <- 1
means[1] <- (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi)
sds[1] <- sqrt(1/phi_0 + n*phi)
phi_0 <- sqrt(10)
means[2] <- (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi)
sds[2] <- sqrt(1/phi_0 + n*phi)
comps <- matrix(data = c(means, sds), nrow = 2, ncol=2, byrow = TRUE, dimnames=list(c("Mean", "Standard deviation"), c("John", "Mary")))
comps
sqrt(1/(1 + n*phi))
means <- numeric(length=2)
sds <- numeric(length=2)
phi_0 <- 1
means[1] <- (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi)
sds[1] <- sqrt(1/(phi_0 + n*phi))
phi_0 <- sqrt(10)
means[2] <- (phi_0*mu_0 + n*phi*ybar)/(phi_0 + n*phi)
sds[2] <- sqrt(1/(phi_0 + n*phi))
comps <- matrix(data = c(means, sds), nrow = 2, ncol=2, byrow = TRUE, dimnames=list(c("Mean", "Standard deviation"), c("John", "Mary")))
comps
sqrt(1/1.5)
n*0.8164966
sqrt(3)
0.2836272/1.73
0.1639464/sqrt(0.28)
0.1639464/sqrt(0.2836)
0.1639464/sqrt(0.2836272)
sqrt(10)
sqrt(3.162278)
0.2836272/1.77828
sqrt(1/(sqrt(10) + 14*phi))
sqrt(1/(1 + 14*phi))
sqrt(10)/11
sqrt(1)/11
require(devtools)
devtools::install_github("bayesball/ProbBayes")
install.packages("devtools")
require(devtools)
devtools::install_github("bayesball/ProbBayes")
install.packages("devtools")
require(devtools)
devtools::install_github("bayesball/ProbBayes")
apt-get -y build-dep libcurl4-gnutls-dev
apt-get -y install libcurl4-gnutls-dev
require(ggplot2)
require(gridExtra)
require(tidyverse)
crcblue <- "#2905a1"
dramadata = read.csv("KDramaData.csv", header=T)
KBSdrama = dramadata[dramadata$Producer==2,]
KBSdrama$Schedule = as.factor(KBSdrama$Schedule)
dramadata = read.csv("KDramaData.csv", header=T)
KBSdrama = dramadata[dramadata$Producer==2,]
KBSdrama$Schedule = as.factor(KBSdrama$Schedule)
modelString <-"
model {
## likelihood
for (j in 1:J){
mu_j[j] ~ dlnorm(mu, invtau2)
}
## priors
for (j in 1:J){
mu_j[j] ~ dnorm(mu, invtau2)
}
invsigma2 ~ dgamma(a_g, b_g)
sigma <- sqrt(pow(invsigma2, -1))
## hyperpriors
mu ~ dnorm(mu0, 1/g0^2)
invtau2 ~ dgamma(a_t, b_t)
tau <- sqrt(pow(invtau2, -1))
}
"
y = KBSdrama$Rating
schedule = KBSdrama$Schedule
N = length(y)
J = length(unique(schedule))
initsfunction <- function(chain){
.RNG.seed <- c(1,2)[chain]
.RNG.name <- c("base::Super-Duper",
"base::Wichmann-Hill")[chain]
return(list(.RNG.seed=.RNG.seed,
.RNG.name=.RNG.name))
}
the_data <- list("y" = y, "schedule" = schedule, "N" = N, "J" = J,
"mu0" = 0.1, "g0" = 0.5,
"a_t" = 1, "b_t" = 1,
"a_g" = 1, "b_g" = 1)
posterior <- run.jags(modelString,
n.chains = 1,
data = the_data,
monitor = c("mu", "tau", "mu_j", "sigma"),
adapt = 1000,
burnin = 5000,
sample = 5000,
thin = 1,
inits = initsfunction)
install.packages("runjags")
library(runjags)
dramadata = read.csv("KDramaData.csv", header=T)
KBSdrama = dramadata[dramadata$Producer==2,]
KBSdrama$Schedule = as.factor(KBSdrama$Schedule)
modelString <-"
model {
## likelihood
for (j in 1:J){
mu_j[j] ~ dlnorm(mu, invtau2)
}
## priors
for (j in 1:J){
mu_j[j] ~ dnorm(mu, invtau2)
}
invsigma2 ~ dgamma(a_g, b_g)
sigma <- sqrt(pow(invsigma2, -1))
## hyperpriors
mu ~ dnorm(mu0, 1/g0^2)
invtau2 ~ dgamma(a_t, b_t)
tau <- sqrt(pow(invtau2, -1))
}
"
y = KBSdrama$Rating
schedule = KBSdrama$Schedule
N = length(y)
J = length(unique(schedule))
initsfunction <- function(chain){
.RNG.seed <- c(1,2)[chain]
.RNG.name <- c("base::Super-Duper",
"base::Wichmann-Hill")[chain]
return(list(.RNG.seed=.RNG.seed,
.RNG.name=.RNG.name))
}
the_data <- list("y" = y, "schedule" = schedule, "N" = N, "J" = J,
"mu0" = 0.1, "g0" = 0.5,
"a_t" = 1, "b_t" = 1,
"a_g" = 1, "b_g" = 1)
posterior <- run.jags(modelString,
n.chains = 1,
data = the_data,
monitor = c("mu", "tau", "mu_j", "sigma"),
adapt = 1000,
burnin = 5000,
sample = 5000,
thin = 1,
inits = initsfunction)
failed.jags()
cleanup.jags()
dramadata = read.csv("KDramaData.csv", header=T)
KBSdrama = dramadata[dramadata$Producer==2,]
KBSdrama$Schedule = as.factor(KBSdrama$Schedule)
modelString <-"
model {
## likelihood
for (j in 1:J){
mu_j[j] ~ dlnorm(mu, invtau2)
}
## priors
for (j in 1:J){
mu_j[j] ~ dnorm(mu, invtau2)
}
invsigma2 ~ dgamma(a_g, b_g)
sigma <- sqrt(pow(invsigma2, -1))
## hyperpriors
mu ~ dnorm(mu0, 1/g0^2)
invtau2 ~ dgamma(a_t, b_t)
tau <- sqrt(pow(invtau2, -1))
}
"
y = KBSdrama$Rating
schedule = KBSdrama$Schedule
N = length(y)
J = length(unique(schedule))
initsfunction <- function(chain){
.RNG.seed <- c(1,2)[chain]
.RNG.name <- c("base::Super-Duper",
"base::Wichmann-Hill")[chain]
return(list(.RNG.seed=.RNG.seed,
.RNG.name=.RNG.name))
}
the_data <- list("y" = y, "schedule" = schedule, "N" = N, "J" = J,
"mu0" = 0.1, "g0" = 0.5,
"a_t" = 1, "b_t" = 1,
"a_g" = 1, "b_g" = 1)
posterior <- run.jags(modelString,
n.chains = 1,
data = the_data,
monitor = c("mu", "tau", "mu_j", "sigma"),
adapt = 1000,
burnin = 5000,
sample = 5000,
thin = 1,
inits = initsfunction)
