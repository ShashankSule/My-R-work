ggplot(data = mean_ppc, aes(mean_ppc$means)) +
geom_histogram(breaks = seq(8.5, 9.0, by=0.01)) +
annotate("point", x = sample_mean, y = 0, colour = "red", size = 5) +
xlab("y") + theme(text = element_text(size=10))
mean(means > sample_mean)
1-mean(means>sample_mean)
# Here is some sample script to create the plot of the predicted sample mean of log expenditure
# Suppose mean_ppc is the vector storing the predicted sample mean values,
# and the column name is mean
# Further suppose the actual sample mean stored as sample_mean
S <- 1000
sample_mean <- ybar
means <- numeric(length = S)
for(i in 1:1000){
mu <- rnorm(1,mu_n,sd_n)
means[i] <- sum(rnorm(n, mu, sd = 0.9))/n
}
mean_ppc <- data.frame(means)
ggplot(data = mean_ppc, aes(mean_ppc$means)) +
geom_histogram(breaks = seq(8.5, 9.0, by=0.01)) +
annotate("point", x = sample_mean, y = 0, colour = "red", size = 5) +
xlab("y") + theme(text = element_text(size=40))
# Here is some sample script to create the plot of the predicted sample mean of log expenditure
# Suppose mean_ppc is the vector storing the predicted sample mean values,
# and the column name is mean
# Further suppose the actual sample mean stored as sample_mean
S <- 1000
sample_mean <- ybar
means <- numeric(length = S)
for(i in 1:1000){
mu <- rnorm(1,mu_n,sd_n)
means[i] <- sum(rnorm(n, mu, sd = 0.9))/n
}
mean_ppc <- data.frame(means)
ggplot(data = mean_ppc, aes(mean_ppc$means)) +
geom_histogram(breaks = seq(8.5, 9.0, by=0.01)) +
annotate("point", x = sample_mean, y = 0, colour = "red", size = 40) +
xlab("y") + theme(text = element_text(size=10))
# Here is some sample script to create the plot of the predicted sample mean of log expenditure
# Suppose mean_ppc is the vector storing the predicted sample mean values,
# and the column name is mean
# Further suppose the actual sample mean stored as sample_mean
S <- 1000
sample_mean <- ybar
means <- numeric(length = S)
for(i in 1:1000){
mu <- rnorm(1,mu_n,sd_n)
means[i] <- sum(rnorm(n, mu, sd = 0.9))/n
}
mean_ppc <- data.frame(means)
ggplot(data = mean_ppc, aes(mean_ppc$means)) +
geom_histogram(breaks = seq(8.5, 9.0, by=0.01), fill = "blue") +
annotate("point", x = sample_mean, y = 0, colour = "red", size = 40) +
xlab("y") + theme(text = element_text(size=10))
# Here is some sample script to create the plot of the predicted sample mean of log expenditure
# Suppose mean_ppc is the vector storing the predicted sample mean values,
# and the column name is mean
# Further suppose the actual sample mean stored as sample_mean
S <- 1000
sample_mean <- ybar
means <- numeric(length = S)
for(i in 1:1000){
mu <- rnorm(1,mu_n,sd_n)
means[i] <- sum(rnorm(n, mu, sd = 0.9))/n
}
mean_ppc <- data.frame(means)
ggplot(data = mean_ppc, aes(mean_ppc$means)) +
geom_histogram(breaks = seq(8.5, 9.0, by=0.01), fill = "blue") +
annotate("point", x = sample_mean, y = 0, colour = "red", size = 5) +
xlab("y") + theme(text = element_text(size=10))
knitr::opts_chunk$set(echo = TRUE)
require(ggplot2)
require(gridExtra)
require(ProbBayes)
require(tidyverse)
crcblue <- "#2905a1"
knitr::opts_chunk$set(echo = TRUE)
def.chunk.hook  <- knitr::knit_hooks$get("chunk")
knitr::knit_hooks$set(chunk = function(x, options) {
x <- def.chunk.hook(x, options)
ifelse(options$size != "normalsize", paste0("\\", options$size,"\n\n", x, "\n\n \\normalsize"), x)
})
install.packages("devtools")
rbeta
?rbeta
?beta.select()
?beta.select
?beta_quantile
require(TeachBayes)
install.packages("TeachBayes")
require(TeachBayes)
?beta.select
knitr::opts_chunk$set(echo = TRUE)
require(LearnBayes)
quantile1=list(p=.2,x=0.3)
quantile2=list(p=.9,x=0.4)
beta.select(quantile1,quantile2)
quantile1=list(p=.2,x=0.3)
quantile2=list(p=.9,x=0.4)
beta.select(quantile1,quantile2)[1]
quantile1=list(p=.2,x=0.3)
quantile2=list(p=.9,x=0.4)
parameters <- beta.select(quantile1,quantile2)
alpha <- parameters[1]
beta <- parameters[2]
quantile1=list(p=.2,x=0.3)
quantile2=list(p=.9,x=0.4)
parameters <- beta.select(quantile1,quantile2)
alpha <- parameters[1]
beta <- parameters[2]
parameters
8+692
2 + 1048 - 692
parameters + c(692, 1048-692)
?seq
seq(from=0, to=1, by 0.01)
seq(from=0, to=1, by=0.01)
?dbeta
p <- seq(from=0, to=1, by=0.01)
a_prior <- sapply(p, dbeta, shape1 = 8, shape2 = 2)
b_prior <- sapply(p, dbeta, shape1 = alpha, shape2 = beta)
p <- seq(from=0, to=1, by=0.01)
a_prior <- sapply(p, dbeta, shape1 = 8, shape2 = 2)
b_prior <- sapply(p, dbeta, shape1 = alpha, shape2 = beta)
prior <- data.frame(c(p, a_prior, b_prior))
knitr::opts_chunk$set(echo = TRUE)
require(LearnBayes)
require(ggplot2)
?melt
knitr::opts_chunk$set(echo = TRUE)
require(LearnBayes)
require(ggplot2)
require(reshape2)
?melt
p <- seq(from=0, to=1, by=0.01)
a_prior <- sapply(p, dbeta, shape1 = 8, shape2 = 2)
b_prior <- sapply(p, dbeta, shape1 = alpha, shape2 = beta)
prior <- data.frame(c(p, a_prior, b_prior))
priort <- melt(prior)
priort
p <- seq(from=0, to=1, by=0.01)
a_prior <- sapply(p, dbeta, shape1 = 8, shape2 = 2)
b_prior <- sapply(p, dbeta, shape1 = alpha, shape2 = beta)
prior <- data.frame(c(p, a_prior, b_prior))
prior
p <- seq(from=0, to=1, by=0.01)
a_prior <- sapply(p, dbeta, shape1 = 8, shape2 = 2)
b_prior <- sapply(p, dbeta, shape1 = alpha, shape2 = beta)
prior <- data.frame(p, a_prior, b_prior)
p <- seq(from=0, to=1, by=0.01)
a_prior <- sapply(p, dbeta, shape1 = 8, shape2 = 2)
b_prior <- sapply(p, dbeta, shape1 = alpha, shape2 = beta)
prior <- data.frame(p, a_prior, b_prior)
prior
p <- seq(from=0, to=1, by=0.01)
a_prior <- sapply(p, dbeta, shape1 = 8, shape2 = 2)
b_prior <- sapply(p, dbeta, shape1 = alpha, shape2 = beta)
prior <- data.frame(p, a_prior, b_prior)
melt(prior)
p <- seq(from=0, to=1, by=0.01)
a_prior <- sapply(p, dbeta, shape1 = 8, shape2 = 2)
b_prior <- sapply(p, dbeta, shape1 = alpha, shape2 = beta)
prior <- data.frame(p, a_prior, b_prior)
priort <- melt(prior, id="p")
p <- seq(from=0, to=1, by=0.01)
a_prior <- sapply(p, dbeta, shape1 = 8, shape2 = 2)
b_prior <- sapply(p, dbeta, shape1 = alpha, shape2 = beta)
prior <- data.frame(p, a_prior, b_prior)
priort <- melt(prior, id="p")
priort
p <- seq(from=0, to=1, by=0.01)
a_prior <- sapply(p, dbeta, shape1 = 8, shape2 = 2)
b_prior <- sapply(p, dbeta, shape1 = alpha, shape2 = beta)
prior <- data.frame(p, a_prior, b_prior)
priort <- melt(prior, id="p")
priort
p <- seq(from=0, to=1, by=0.01)
a_prior <- sapply(p, dbeta, shape1 = 8, shape2 = 2)
b_prior <- sapply(p, dbeta, shape1 = alpha, shape2 = beta)
prior <- data.frame(p, a_prior, b_prior)
priort <- melt(prior, id="p")
ggplot(data=priort, aes(x="p", y="value", color="variable"))+
geom_line()+
labs(x="p", y="Density")
p <- seq(from=0, to=1, by=0.01)
a_prior <- sapply(p, dbeta, shape1 = 8, shape2 = 2)
b_prior <- sapply(p, dbeta, shape1 = alpha, shape2 = beta)
prior <- data.frame(p, a_prior, b_prior)
priort <- melt(prior, id="p")
ggplot(data=priort, aes(x=p, y=value, color=variable))+
geom_line()+
labs(x="p", y="Density")
p <- seq(from=0, to=1, by=0.01)
Alex <- sapply(p, dbeta, shape1 = 8, shape2 = 2)
Benedict <- sapply(p, dbeta, shape1 = alpha, shape2 = beta)
prior <- data.frame(p, a_prior, b_prior)
priort <- melt(prior, id="p")
ggplot(data=priort, aes(x=p, y=value, color=variable))+
geom_line()+
labs(x="p", y="Density")
p <- seq(from=0, to=1, by=0.01)
Alex <- sapply(p, dbeta, shape1 = 8, shape2 = 2)
Benedict <- sapply(p, dbeta, shape1 = alpha, shape2 = beta)
prior <- data.frame(p, Alex, Benedict)
priort <- melt(prior, id="p")
ggplot(data=priort, aes(x=p, y=value, color=variable))+
geom_line()+
labs(x="p", y="Density")
p <- seq(from=0, to=1, by=0.01)
Alex <- sapply(p, dbeta, shape1 = 8, shape2 = 2)
Benedict <- sapply(p, dbeta, shape1 = alpha, shape2 = beta)
prior <- data.frame(p, Alex, Benedict)
priort <- melt(prior, id="p")
ggplot(data=priort, aes(x=p, y=value, color=variable))+
geom_line()+
labs(x="p", y="Density", color="Prior")
p <- seq(from=0, to=1, by=0.01)
Alex <- sapply(p, dbeta, shape1 = 8+692, shape2 = 2+1048-692)
Benedict <- sapply(p, dbeta, shape1 = alpha+692, shape2 = beta + 1048-692)
prior <- data.frame(p, Alex, Benedict)
priort <- melt(prior, id="p")
ggplot(data=priort, aes(x=p, y=value, color=variable))+
geom_line()+
labs(x="p", y="Density", color="Prior")
p <- seq(from=0, to=1, by=0.001)
Alex <- sapply(p, dbeta, shape1 = 8+692, shape2 = 2+1048-692)
Benedict <- sapply(p, dbeta, shape1 = alpha+692, shape2 = beta + 1048-692)
prior <- data.frame(p, Alex, Benedict)
priort <- melt(prior, id="p")
ggplot(data=priort, aes(x=p, y=value, color=variable))+
geom_line()+
labs(x="p", y="Density", color="Prior")
p <- seq(from=0, to=1, by=0.001)
AlexPos <- sapply(p, dbeta, shape1 = 8+692, shape2 = 2+1048-692)
BenedictPos <- sapply(p, dbeta, shape1 = alpha+692, shape2 = beta + 1048-692)
prior <- data.frame(p, AlexPos, BenedictPos)
priort <- melt(prior, id="p")
ggplot(data=priort, aes(x=p, y=value, color=variable))+
geom_line()+
labs(x="p", y="Density")+
scale_color_discrete(name="Posterior", labels=c("Alex, Benedict"))
p <- seq(from=0, to=1, by=0.001)
AlexPos <- sapply(p, dbeta, shape1 = 8+692, shape2 = 2+1048-692)
BenedictPos <- sapply(p, dbeta, shape1 = alpha+692, shape2 = beta + 1048-692)
prior <- data.frame(p, AlexPos, BenedictPos)
priort <- melt(prior, id="p")
ggplot(data=priort, aes(x=p, y=value, color=variable))+
geom_line()+
labs(x="p", y="Density")+
scale_color_discrete(name="Posterior", labels=c("Alex", "Benedict"))
p <- seq(from=0, to=1, by=0.01)
Alex <- sapply(p, dbeta, shape1 = 8, shape2 = 2)
Benedict <- sapply(p, dbeta, shape1 = alpha, shape2 = beta)
prior <- data.frame(p, Alex, Benedict)
priort <- melt(prior, id="p")
ggplot(data=priort, aes(x=p, y=value, color=variable))+
geom_line()+
labs(x="p", y="Density", color="Prior")
p <- seq(from=0, to=1, by=0.001)
AlexPos <- sapply(p, dbeta, shape1 = 8+692, shape2 = 2+1048-692)
BenedictPos <- sapply(p, dbeta, shape1 = alpha+692, shape2 = beta + 1048-692)
posterior <- data.frame(p, AlexPos, BenedictPos)
posteriort <- melt(posterior, id="p")
ggplot(data=posteriort, aes(x=p, y=value, color=variable))+
geom_line()+
labs(x="p", y="Density")+
scale_color_discrete(name="Posterior", labels=c("Alex", "Benedict"))
?quantile
qbeta(c(0.025,0.975), shape1 = 8+692, shape2 = 2 + 1048 - 692)
qbeta(c(0.025,0.975), shape1 = alpha+692, shape2 = beta + 1048 - 692)
?rbinom
set.seed(123)
S <- 1000
a <- rbeta(S, 8, 2)
b <- rbeta(S, alpha, beta)
alex <- sapply(a, rbinom, n=1, size = 1048)
benedict <- sapply(b, rbinom, n=1, size=1048)
set.seed(123)
S <- 1000
a <- rbeta(S, 8, 2)
b <- rbeta(S, alpha, beta)
alex <- sapply(a, rbinom, n=1, size = 1048)
benedict <- sapply(b, rbinom, n=1, size=1048)
ggplot(alex, aes(x=alex)) +
geom_histogram()
set.seed(123)
S <- 1000
a <- rbeta(S, 8, 2)
b <- rbeta(S, alpha, beta)
alex <- sapply(a, rbinom, n=1, size = 1048)
benedict <- sapply(b, rbinom, n=1, size=1048)
ggplot(as.data.frame(alex), aes(x=alex)) +
geom_histogram()
set.seed(123)
S <- 1000
a <- rbeta(S, 8, 2)
b <- rbeta(S, alpha, beta)
alex <- sapply(a, rbinom, n=1, size = 1048)
benedict <- sapply(b, rbinom, n=1, size=1048)
ggplot(as.data.frame(alex), aes(x=alex)) +
geom_histogram()+
annotate("point", x=692, y=0, color = "red", size = "5")
set.seed(123)
S <- 1000
a <- rbeta(S, 8, 2)
b <- rbeta(S, alpha, beta)
alex <- sapply(a, rbinom, n=1, size = 1048)
benedict <- sapply(b, rbinom, n=1, size=1048)
ggplot(as.data.frame(alex), aes(x=alex)) +
geom_histogram()+
annotate("point", x=692, y=0, colour = "red", size = "5")
set.seed(123)
S <- 1000
a <- rbeta(S, 8, 2)
b <- rbeta(S, alpha, beta)
alex <- sapply(a, rbinom, n=1, size = 1048)
benedict <- sapply(b, rbinom, n=1, size=1048)
ggplot(as.data.frame(alex), aes(x=alex)) +
geom_histogram()+
set.seed(123)
S <- 1000
a <- rbeta(S, 8, 2)
b <- rbeta(S, alpha, beta)
alex <- sapply(a, rbinom, n=1, size = 1048)
benedict <- sapply(b, rbinom, n=1, size=1048)
ggplot(as.data.frame(alex), aes(x=alex)) +
geom_histogram()
set.seed(123)
S <- 1000
a <- rbeta(S, 8, 2)
b <- rbeta(S, alpha, beta)
alex <- sapply(a, rbinom, n=1, size = 1048)
benedict <- sapply(b, rbinom, n=1, size=1048)
sum(alex >= 692)/1000
set.seed(123)
S <- 1000
a <- rbeta(S, 8, 2)
b <- rbeta(S, alpha, beta)
alex <- sapply(a, rbinom, n=1, size = 1048)
benedict <- sapply(b, rbinom, n=1, size=1048)
sum(alex >= 692)/S
sum(benedict >= 692)/S
sum(alex >= 692)/S
1- sum(alex >= 692)/S
#sum(alex >= 692)/S
1 - sum(alex >= 692)/S
c(sum(alex >= 692)/S, 1 - sum(alex >= 692)/S)
c(sum(benedict >= 692)/S, 1 - sum(benedict >= 692)/S)
?matrix
?quantile
apos <- rbeta(S, 8+692, 2+1048-692)
bpos <- rbeta(S, alpha+692, beta+1048-692)
odda <- apos/(1-apos)
oddb <- bpos/(1-bos)
apos <- rbeta(S, 8+692, 2+1048-692)
bpos <- rbeta(S, alpha+692, beta+1048-692)
odda <- apos/(1-apos)
oddb <- bpos/(1-bpos)
meana <- mean(odda)
meanb <- mean(oddb)
quantile(odda, probs = (0.025,0.975))
apos <- rbeta(S, 8+692, 2+1048-692)
bpos <- rbeta(S, alpha+692, beta+1048-692)
odda <- apos/(1-apos)
oddb <- bpos/(1-bpos)
meana <- mean(odda)
meanb <- mean(oddb)
quantile(odda, probs = c(0.025,0.975))
apos <- rbeta(S, 8+692, 2+1048-692)
bpos <- rbeta(S, alpha+692, beta+1048-692)
odda <- apos/(1-apos)
oddb <- bpos/(1-bpos)
meana <- mean(odda)
meanb <- mean(oddb)
mediana <- median(odda)
medianb <- median(oddb)
qa <- quantile(odda, probs = c(0.025,0.975))
qb <- quantile(oddb, probs = c(0.025,0.975))
dat <- as.data.frame(c(meana, meanb), c(mediana, medianb), c(qa, qb))
apos <- rbeta(S, 8+692, 2+1048-692)
bpos <- rbeta(S, alpha+692, beta+1048-692)
odda <- apos/(1-apos)
oddb <- bpos/(1-bpos)
meana <- mean(odda)
meanb <- mean(oddb)
mediana <- median(odda)
medianb <- median(oddb)
qa <- quantile(odda, probs = c(0.025,0.975))
qb <- quantile(oddb, probs = c(0.025,0.975))
dat <- as.data.frame(c(meana, meanb), c(mediana, medianb), c(qa[2,], qb[2,]))
apos <- rbeta(S, 8+692, 2+1048-692)
bpos <- rbeta(S, alpha+692, beta+1048-692)
odda <- apos/(1-apos)
oddb <- bpos/(1-bpos)
meana <- mean(odda)
meanb <- mean(oddb)
mediana <- median(odda)
medianb <- median(oddb)
qa <- quantile(odda, probs = c(0.025,0.975))
qb <- quantile(oddb, probs = c(0.025,0.975))
qa[2,]
?matrix
apos <- rbeta(S, 8+692, 2+1048-692)
bpos <- rbeta(S, alpha+692, beta+1048-692)
odda <- apos/(1-apos)
oddb <- bpos/(1-bpos)
meana <- mean(odda)
meanb <- mean(oddb)
mediana <- median(odda)
medianb <- median(oddb)
qa <- quantile(odda, probs = c(0.025,0.975))
qb <- quantile(oddb, probs = c(0.025,0.975))
dats <- matrix(data = NA, nrow = 2, ncol = 4, byrow = TRUE, dimnames = list(c("Alex","Benedict"),c("Mean","Median", "2.5%", "97.5%")))
apos <- rbeta(S, 8+692, 2+1048-692)
bpos <- rbeta(S, alpha+692, beta+1048-692)
odda <- apos/(1-apos)
oddb <- bpos/(1-bpos)
meana <- mean(odda)
meanb <- mean(oddb)
mediana <- median(odda)
medianb <- median(oddb)
qa <- quantile(odda, probs = c(0.025,0.975))
qb <- quantile(oddb, probs = c(0.025,0.975))
dats <- matrix(data = NA, nrow = 2, ncol = 4, byrow = TRUE, dimnames = list(c("Alex","Benedict"),c("Mean","Median", "2.5%", "97.5%")))
dats[1,] <- c(meana, mediana, qa[1],qa[2])
dats[2,] <- c(meanb, medianb, qb[1],qb[2])
apos <- rbeta(S, 8+692, 2+1048-692)
bpos <- rbeta(S, alpha+692, beta+1048-692)
odda <- apos/(1-apos)
oddb <- bpos/(1-bpos)
meana <- mean(odda)
meanb <- mean(oddb)
mediana <- median(odda)
medianb <- median(oddb)
qa <- quantile(odda, probs = c(0.025,0.975))
qb <- quantile(oddb, probs = c(0.025,0.975))
dats <- matrix(data = NA, nrow = 2, ncol = 4, byrow = TRUE, dimnames = list(c("Alex","Benedict"),c("Mean","Median", "2.5%", "97.5%")))
dats[1,] <- c(meana, mediana, qa[1],qa[2])
dats[2,] <- c(meanb, medianb, qb[1],qb[2])
dats
rbeta(10, 8+692, 2+1048-692)
?zeros
?seq
?rep
?numeric
?length
?quantile
S <- c(10,100,500,1000,5000)
left <- numeric(length = length(S))
right <- numeric(length = length(S))
for(i in 1:length(S)){
left[i] <- quantile(rbeta(S[i],15.06, 10.56), probs = c(0.5, 0.95))[1]
right[i] <- quantile(rbeta(S[i],15.06, 10.56), probs = c(0.5, 0.95))[2]
}
left
S <- c(10,100,500,1000,5000)
left <- numeric(length = length(S))
right <- numeric(length = length(S))
for(i in 1:length(S)){
left[i] <- quantile(rbeta(S[i],15.06, 10.56), probs = c(0.5, 0.95))[1]
right[i] <- quantile(rbeta(S[i],15.06, 10.56), probs = c(0.5, 0.95))[2]
}
data <- data.frame(S,left,right)
names(data) <- c("S","5%", "95%")
S <- c(10,100,500,1000,5000)
left <- numeric(length = length(S))
right <- numeric(length = length(S))
for(i in 1:length(S)){
left[i] <- quantile(rbeta(S[i],15.06, 10.56), probs = c(0.5, 0.95))[1]
right[i] <- quantile(rbeta(S[i],15.06, 10.56), probs = c(0.5, 0.95))[2]
}
data <- data.frame(S,left,right)
names(data) <- c("S","5%", "95%")
data
?qbeta
qbeta(c(0.5,0.95),15.06,10.56)
quantile(rbeta(5000,15.06, 10.56), probs = c(0.5, 0.95))
S <- c(10,100,500,1000,5000)
left <- numeric(length = length(S))
right <- numeric(length = length(S))
for(i in 1:length(S)){
left[i] <- quantile(rbeta(S[i],15.06, 10.56), probs = c(0.05, 0.95))[1]
right[i] <- quantile(rbeta(S[i],15.06, 10.56), probs = c(0.05, 0.95))[2]
}
data <- data.frame(S,left,right)
names(data) <- c("S","5%", "95%")
data
p <- seq(from=0, to=1, by=0.01)
Alex <- sapply(p, dbeta, shape1 = 8, shape2 = 2)
Benedict <- sapply(p, dbeta, shape1 = alpha, shape2 = beta)
prior <- data.frame(p, Alex, Benedict)
priort <- melt(prior, id="p")
ggplot(data=priort, aes(x=p, y=value, color=variable))+
geom_line()+
labs(x="p", y="Density", color="Prior")
p <- seq(from=0, to=1, by=0.001)
AlexPos <- sapply(p, dbeta, shape1 = 8+692, shape2 = 2+1048-692)
BenedictPos <- sapply(p, dbeta, shape1 = alpha+692, shape2 = beta + 1048-692)
posterior <- data.frame(p, AlexPos, BenedictPos)
posteriort <- melt(posterior, id="p")
ggplot(data=posteriort, aes(x=p, y=value, color=variable))+
geom_line()+
labs(title="Comparing Posteriors", x="p", y="Density")+
scale_color_discrete(name="Posterior", labels=c("Alex", "Benedict"))
p <- seq(from=0, to=1, by=0.01)
Alex <- sapply(p, dbeta, shape1 = 8, shape2 = 2)
Benedict <- sapply(p, dbeta, shape1 = alpha, shape2 = beta)
prior <- data.frame(p, Alex, Benedict)
priort <- melt(prior, id="p")
ggplot(data=priort, aes(x=p, y=value, color=variable))+
geom_line()+
labs(title="Comparing priors", x="p", y="Density", color="Prior")
