CEsample <- read_csv("CEsample1.csv")
?read.csv
require(readr)
CEsample <- read_csv("CEsample1.csv")
CEsample$LogTotalExpLastQ <- log(CEdata$TotalExpLastQ)
require(readr)
CEsample <- read_csv("CEsample1.csv")
CEsample$LogTotalExpLastQ <- log(CEsample$TotalExpLastQ)
summary(CEsample)
head(CEsample)
?rnorm
?set.seed
?rnorm
mu_0 <- 5
sigma_0 <- 1
phi_0 <- 1/sigma_0^2
ybar <- mean(CEsample$LogTotalExpLastQ)
phi <- 1.25
n <- dim(CEsample)[1]
mu_n <- (phi_0*mu_0+n*ybar*phi)/(phi_0+n*phi)
sd_n <- sqrt(1/(phi_0+n*phi))
S = 1000
set.seed(123)
samples <- rnorm(S, mu_n, sd_n)
prop <- sum(samples >= 9)
samples > 9
sum(samples > 9)
dnorm(0)
pnorm(0)
1 - pnorm(9,mu_n,sd_n)
pnorm(9,mu_n, sd_n)
1 - pnorm(9, mu_n, sd_n)
S <- 1000
set.seed(123)
samples <- rnorm(S, mu_n, sd_n)
sum(samples >= 9)/S
qnorm(c(0.5))
qnorm(c(0.25, 0.75))
qnorm(c(0.025, 0.975),mu_n,sd_n)
qnorm(c(0.025, 0.975),mu_n,sd_n)
?quantile
quantile(samples, probs = c(0.025,0.975))
quantile(samples, probs = c(0.025,0.975))
?rnomr
?rnorm
# Here is some sample script to create the plot of the predicted log expenditure
# Suppose y_pred is the vector storing the predicted values, and the column name is y
muvals <- rnorm(n,mu_n, sd_n)
y <- sapply(muvals, rnorm, n=1, sd=1.25)
y_pred <- data.frame(muvals,y)
ggplot(data = y_pred, aes(y_pred$y)) +
geom_histogram(breaks = seq(0, 20, by=0.5), fill = blue) +
xlab("y") + theme(text = element_text(size=10))
# Here is some sample script to create the plot of the predicted log expenditure
# Suppose y_pred is the vector storing the predicted values, and the column name is y
require(ggplot2)
muvals <- rnorm(n,mu_n, sd_n)
y <- sapply(muvals, rnorm, n=1, sd=1.25)
y_pred <- data.frame(muvals,y)
ggplot(data = y_pred, aes(y_pred$y)) +
geom_histogram(breaks = seq(0, 20, by=0.5), fill = blue) +
xlab("y") + theme(text = element_text(size=10))
# Here is some sample script to create the plot of the predicted log expenditure
# Suppose y_pred is the vector storing the predicted values, and the column name is y
require(ggplot2)
muvals <- rnorm(n,mu_n, sd_n)
y <- sapply(muvals, rnorm, n=1, sd=1.25)
y_pred <- data.frame(muvals,y)
ggplot(data = y_pred, aes(y_pred$y)) +
geom_histogram(breaks = seq(0, 20, by=0.5)) +
xlab("y") + theme(text = element_text(size=10))
# Here is some sample script to create the plot of the predicted log expenditure
# Suppose y_pred is the vector storing the predicted values, and the column name is y
require(ggplot2)
muvals <- rnorm(n,mu_n, sd_n)
y <- sapply(muvals, rnorm, n=1, sd=1/sqrt(1.25))
y_pred <- data.frame(muvals,y)
ggplot(data = y_pred, aes(y_pred$y)) +
geom_histogram(breaks = seq(0, 20, by=0.5)) +
xlab("y") + theme(text = element_text(size=10))
1/sqrt(1.25)
1:10
?numeric
1:10(1)
a <- 1:10
a(1)
a[1]
# Here is some sample script to create the plot of the predicted sample mean of log expenditure
# Suppose mean_ppc is the vector storing the predicted sample mean values,
# and the column name is mean
# Further suppose the actual sample mean stored as sample_mean
S <- 1000
sample_mean <- ybar
means <- numeric(length = S)
for(i in 1:1000){
mu <- rnorm(1,mu_n,sd_n)
mean[i] <- sum(rnorm(n, mu, sd = 0.9))/n
}
# Here is some sample script to create the plot of the predicted sample mean of log expenditure
# Suppose mean_ppc is the vector storing the predicted sample mean values,
# and the column name is mean
# Further suppose the actual sample mean stored as sample_mean
S <- 1000
sample_mean <- ybar
means <- numeric(length = S)
for(i in 1:1000){
mu <- rnorm(1,mu_n,sd_n)
means[i] <- sum(rnorm(n, mu, sd = 0.9))/n
}
mean_ppc <- data.frame(means)
ggplot(data = mean_ppc, aes(mean_ppc$means)) +
geom_histogram(breaks = seq(0, 20, by=0.5), fill = blue) +
annotate("point", x = sample_mean, y = 0, colour = "red", size = 5) +
xlab("y") + theme(text = element_text(size=10))
# Here is some sample script to create the plot of the predicted sample mean of log expenditure
# Suppose mean_ppc is the vector storing the predicted sample mean values,
# and the column name is mean
# Further suppose the actual sample mean stored as sample_mean
S <- 1000
sample_mean <- ybar
means <- numeric(length = S)
for(i in 1:1000){
mu <- rnorm(1,mu_n,sd_n)
means[i] <- sum(rnorm(n, mu, sd = 0.9))/n
}
mean_ppc <- data.frame(means)
ggplot(data = mean_ppc, aes(mean_ppc$means)) +
geom_histogram(breaks = seq(0, 20, by=0.5)) +
annotate("point", x = sample_mean, y = 0, colour = "red", size = 5) +
xlab("y") + theme(text = element_text(size=10))
mean(means > sample_mean)
mean(means > sample_mean)
1-mean(means>sample_mean)
